{
 "Resources": {
  "SmartFactoryIoTBucket67F51EAA": {
   "Type": "AWS::S3::Bucket",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/SmartFactoryIoTBucket/Resource"
   }
  },
  "SmartFactoryIoTMessagesE4FED994": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "timestamp",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "timestamp",
      "KeyType": "RANGE"
     }
    ],
    "TableName": "SmartFactoryIoTMessages"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/SmartFactoryIoTMessages/Resource"
   }
  },
  "IoTStoreToDynamoDBFunctionServiceRoleC9072C12": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/IoTStoreToDynamoDBFunction/ServiceRole/Resource"
   }
  },
  "IoTStoreToDynamoDBFunctionServiceRoleDefaultPolicyE9168C67": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SmartFactoryIoTMessagesE4FED994",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "SmartFactoryIoTBucket67F51EAA",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IoTStoreToDynamoDBFunctionServiceRoleDefaultPolicyE9168C67",
    "Roles": [
     {
      "Ref": "IoTStoreToDynamoDBFunctionServiceRoleC9072C12"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/IoTStoreToDynamoDBFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "IoTStoreToDynamoDBFunction7B8D3CF4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-218508884047-eu-north-1",
     "S3Key": "5620b12d6e858b53f014ad8cf44808d12529632a0e00ab210952bd2bce1add2b.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "SmartFactoryIoTBucket67F51EAA"
      },
      "DYNAMODB_TABLE_NAME": {
       "Ref": "SmartFactoryIoTMessagesE4FED994"
      }
     }
    },
    "Handler": "iot_store_to_dynamodb.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "IoTStoreToDynamoDBFunctionServiceRoleC9072C12",
      "Arn"
     ]
    },
    "Runtime": "python3.12"
   },
   "DependsOn": [
    "IoTStoreToDynamoDBFunctionServiceRoleDefaultPolicyE9168C67",
    "IoTStoreToDynamoDBFunctionServiceRoleC9072C12"
   ],
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/IoTStoreToDynamoDBFunction/Resource",
    "aws:asset:path": "asset.5620b12d6e858b53f014ad8cf44808d12529632a0e00ab210952bd2bce1add2b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "IoTStoreToDynamoDBFunctionAllowIoTInvokeCC036F08": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "IoTStoreToDynamoDBFunction7B8D3CF4",
      "Arn"
     ]
    },
    "Principal": "iot.amazonaws.com",
    "SourceArn": "arn:aws:iot:eu-north-1:218508884047:rule/TriggerLambdaOnMQTTMessage"
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/IoTStoreToDynamoDBFunction/AllowIoTInvoke"
   }
  },
  "IoTTopicRule": {
   "Type": "AWS::IoT::TopicRule",
   "Properties": {
    "RuleName": "TriggerLambdaOnMQTTMessage",
    "TopicRulePayload": {
     "Actions": [
      {
       "Lambda": {
        "FunctionArn": {
         "Fn::GetAtt": [
          "IoTStoreToDynamoDBFunction7B8D3CF4",
          "Arn"
         ]
        }
       }
      }
     ],
     "RuleDisabled": false,
     "Sql": "SELECT * FROM 'factory/line1/data'"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/IoTTopicRule"
   }
  },
  "DynamoDBToS3FunctionServiceRoleE50F49A4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/DynamoDBToS3Function/ServiceRole/Resource"
   }
  },
  "DynamoDBToS3FunctionServiceRoleDefaultPolicy807D434E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SmartFactoryIoTMessagesE4FED994",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "SmartFactoryIoTBucket67F51EAA",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DynamoDBToS3FunctionServiceRoleDefaultPolicy807D434E",
    "Roles": [
     {
      "Ref": "DynamoDBToS3FunctionServiceRoleE50F49A4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/DynamoDBToS3Function/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DynamoDBToS3Function5DE4B518": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-218508884047-eu-north-1",
     "S3Key": "5620b12d6e858b53f014ad8cf44808d12529632a0e00ab210952bd2bce1add2b.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "SmartFactoryIoTBucket67F51EAA"
      },
      "DYNAMODB_TABLE_NAME": {
       "Ref": "SmartFactoryIoTMessagesE4FED994"
      }
     }
    },
    "Handler": "dynamodb_to_s3.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "DynamoDBToS3FunctionServiceRoleE50F49A4",
      "Arn"
     ]
    },
    "Runtime": "python3.12"
   },
   "DependsOn": [
    "DynamoDBToS3FunctionServiceRoleDefaultPolicy807D434E",
    "DynamoDBToS3FunctionServiceRoleE50F49A4"
   ],
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/DynamoDBToS3Function/Resource",
    "aws:asset:path": "asset.5620b12d6e858b53f014ad8cf44808d12529632a0e00ab210952bd2bce1add2b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "HourlyDynamoDBToS3RuleC20F587F": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "cron(0 * * * ? *)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "DynamoDBToS3Function5DE4B518",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/HourlyDynamoDBToS3Rule/Resource"
   }
  },
  "HourlyDynamoDBToS3RuleAllowEventRuleSmartFactoryStackDynamoDBToS3FunctionB31F2615BBA1BBA0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DynamoDBToS3Function5DE4B518",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "HourlyDynamoDBToS3RuleC20F587F",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/HourlyDynamoDBToS3Rule/AllowEventRuleSmartFactoryStackDynamoDBToS3FunctionB31F2615"
   }
  },
  "SmartFactoryGlueDb": {
   "Type": "AWS::Glue::Database",
   "Properties": {
    "CatalogId": "218508884047",
    "DatabaseInput": {
     "Name": "smart_factory_db"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/SmartFactoryGlueDb"
   }
  },
  "SmartFactoryGlueCrawlerRole3695039B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "glue.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSGlueServiceRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/SmartFactoryGlueCrawlerRole/Resource"
   }
  },
  "SmartFactoryGlueCrawlerRoleDefaultPolicyB5F65AAF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:ListBucket",
        "s3:GetBucketLocation"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "SmartFactoryIoTBucket67F51EAA",
         "Arn"
        ]
       }
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "SmartFactoryIoTBucket67F51EAA",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SmartFactoryGlueCrawlerRoleDefaultPolicyB5F65AAF",
    "Roles": [
     {
      "Ref": "SmartFactoryGlueCrawlerRole3695039B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/SmartFactoryGlueCrawlerRole/DefaultPolicy/Resource"
   }
  },
  "SmartFactoryGlueCrawler": {
   "Type": "AWS::Glue::Crawler",
   "Properties": {
    "DatabaseName": "smart_factory_db",
    "Name": "iot_hourly_crawler",
    "RecrawlPolicy": {
     "RecrawlBehavior": "CRAWL_EVERYTHING"
    },
    "Role": {
     "Fn::GetAtt": [
      "SmartFactoryGlueCrawlerRole3695039B",
      "Arn"
     ]
    },
    "SchemaChangePolicy": {
     "DeleteBehavior": "LOG",
     "UpdateBehavior": "UPDATE_IN_DATABASE"
    },
    "Targets": {
     "S3Targets": [
      {
       "Path": {
        "Fn::Join": [
         "",
         [
          "s3://",
          {
           "Ref": "SmartFactoryIoTBucket67F51EAA"
          },
          "/iot-data/"
         ]
        ]
       }
      }
     ]
    }
   },
   "DependsOn": [
    "SmartFactoryGlueDb"
   ],
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/SmartFactoryGlueCrawler"
   }
  },
  "StartGlueCrawlerHourlyC8DABA7A": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "cron(5 * * * ? *)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "AWSb4cf1abd4e4f4bc699441af7ccd9ec371511E620",
        "Arn"
       ]
      },
      "Id": "Target0",
      "Input": "{\"service\":\"Glue\",\"action\":\"startCrawler\",\"parameters\":{\"Name\":\"iot_hourly_crawler\"}}"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/StartGlueCrawlerHourly/Resource"
   }
  },
  "StartGlueCrawlerHourlyAllowEventRuleSmartFactoryStackStartGlueCrawlerHourlyStartGlueCrawlerHourlyTarget0HandlerDC34084FF504630B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AWSb4cf1abd4e4f4bc699441af7ccd9ec371511E620",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "StartGlueCrawlerHourlyC8DABA7A",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/StartGlueCrawlerHourly/AllowEventRuleSmartFactoryStackStartGlueCrawlerHourlyStartGlueCrawlerHourlyTarget0HandlerDC34084F"
   }
  },
  "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/AWSb4cf1abd4e4f4bc699441af7ccd9ec37/ServiceRole/Resource"
   }
  },
  "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRoleDefaultPolicy4D43A7C1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "glue:StartCrawler",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRoleDefaultPolicy4D43A7C1",
    "Roles": [
     {
      "Ref": "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/AWSb4cf1abd4e4f4bc699441af7ccd9ec37/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AWSb4cf1abd4e4f4bc699441af7ccd9ec371511E620": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-218508884047-eu-north-1",
     "S3Key": "2ae6c3325f7d4ca8e77ad076a10de37ad4fff0d4acdb22314dda362fc7c8129a.zip"
    },
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Timeout": 60
   },
   "DependsOn": [
    "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRoleDefaultPolicy4D43A7C1",
    "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50"
   ],
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/AWSb4cf1abd4e4f4bc699441af7ccd9ec37/Resource",
    "aws:asset:path": "asset.2ae6c3325f7d4ca8e77ad076a10de37ad4fff0d4acdb22314dda362fc7c8129a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02OwW6EMAxEv2Xvwd0FqffuVj0j6H1lgpe6hKTCSRGK8u9VQlX1NG809tg11OdnOJ9wk0qPc2V4gNh71LPCTe5RGojXoGfy6vawv3TIFYWSGneLixsHiO84GMpTBZIyuAwjQnwLVnt2Nkf/uaV1YZHseraTIe/+8qQYF4idOxqLts6w3stmoaSkuaMIeYGXLIqdh3zffbHugiFF32S9QCwm94T82GQCQbw97Ct6HFBKdFtxM7SmpDoSF1ZNqpT2Hie2U1Lt7j+cfWrgUsPlfPoU5moN1vNC0B36AwO6TKtNAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "SmartFactoryStack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}